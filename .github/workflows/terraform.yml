# File: .github/workflows/terraform_s3_bucket.yml

name: "Terraform S3 Bucket Deployment"

on:
  workflow_call:
    inputs:
      bucket_name:
        description: "The name of the S3 bucket to create"
        required: true
        type: string
      region:
        description: "AWS region for the S3 bucket"
        required: false
        default: "ap-south-1"
        type: string
    secrets:
      aws_access_key_id:
        required: true
      aws_secret_access_key:
        required: true
      aws_session_token:
        required: false

jobs:
  terraform-plan:
    name: Terraform Plan
    runs-on: self-hosted
    if: github.event_name == 'pull_request'
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.aws_access_key_id }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.aws_secret_access_key }}
      AWS_SESSION_TOKEN: ${{ secrets.aws_session_token }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Terraform Initialization
        run: terraform init

      - name: Terraform Plan
        run: terraform plan -var="bucket_name=${{ inputs.bucket_name }}" -var="region=${{ inputs.region }}"

  terraform-apply:
    name: Terraform Apply
    runs-on: self-hosted
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'  # Only runs on merge to main
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.aws_access_key_id }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.aws_secret_access_key }}
      AWS_SESSION_TOKEN: ${{ secrets.aws_session_token }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Terraform Initialization
        run: terraform init

      # - name: Terraform Apply
      #   run: terraform apply -var="bucket_name=${{ inputs.bucket_name }}" -var="region=${{ inputs.region }}" -auto-approve 
      - name: Cleanup Repository Files from Runner
        if: always()  # Ensures cleanup runs even if previous steps fail
        run: |
          echo "Cleaning up repository files from runner workspace..."
          ls -al
          pwd
          echo ${{ github.workspace }}
          rm -rf ${{ github.workspace }}/*
